{% extends 'base.htm' %}
{% load static %}

{% block title %}
<title>Upload Spreadsheet to QUOREM"</title>
{% endblock title %}

{% block main %}
<br/>
  <h3 class='display-8'>Upload to QUOREM</h3>
<br/>
<a  class="btn btn-primary" href="/">
    <i class="fas fa-angle-left"></i> Back to Home
</a>
<br/><br/>
<div class="alert alert-primary" role="alert">
  <h4 class="alert-heading">Spreadsheet Upload</h4>
  <p></p>
  <hr>
  <p class="mb-0">Drag and drop spreadsheet files (.csv, .tsv, .xls) onto the grey box below to initiate upload to QUOREM.<br/><br/>
                  This saves a copy of the file on the server, and queues it for processing. Processing status will be updated to your messages.<br/><br/>
                  File size is limited to less than 1GB, and maximum 50 files at once.</p>
</div>

<link rel="stylesheet" href="{% static '/js/dropzone.css' %}">
<script src="{% static '/js/dropzone.js' %}"></script>
<script src="{% static '/js/dropzone.js.map' %}"></script>

<form method="post" enctype="multipart/form-data" class="dropzone clsbox" id="MultiFileUpload">
    <div class="fallback">
        <input id="file" name="file" type="file" multiple="multiple"/>
        <input type="submit" value="Upload"/>
    </div>
</form>

<script>

    function getCookie(name) {
        var cookieValue = null;
        if (document.cookie && document.cookie != '') {
            var cookies = document.cookie.split(';');
            for (var i = 0; i < cookies.length; i++) {
                var cookie = jQuery.trim(cookies[i]);
                // Does this cookie string begin with the name we want?
                if (cookie.substring(0, name.length + 1) == (name + '=')) {
                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                    break;
                }
            }
        }
        return cookieValue;
    }
    var csrftoken = getCookie('csrftoken');
    Dropzone.autoDiscover = false;
    $('#MultiFileUpload').dropzone({
        url: "/upload/spreadsheet/",
        crossDomain: false,
        paramName: "file",
        parallelUploads: 50,
        autoProcessQueue: true,
        filesizeBase: 1024,
        maxFilesize: 1000000,
        dictRemoveFileConfirmation: null,
        useFontAwesome: true, 
	dictDefaultMessage: "<i class='fas fa-upload fa-5x'></i><br/><br/><h5>Upload data in spreadsheets by dragging and dropping here</h5>",
        init: function () {
            this.on("uploadprogress", function (file, progress, bytesSent) {
                progress = bytesSent / file.size * 100;
                console.log(filesizecalculation(bytesSent))
            });
            this.on("maxfilesexceeded", function (data) {
                var res = eval('(' + data.xhr.responseText + ')');
            });
            this.on("error", function (file, message) {

                console.log(message);
                this.removeFile(file);
            });
            this.on('sending', function (file, xhr, formData) {
                xhr.setRequestHeader("X-CSRFToken", csrftoken);
            });
	    this.on('queuecomplete', function(progress) {
	        document.querySelector("#total-progress").style.opacity = "0.0";
	    });
	    this.on('success', function (file) {
			    $(".dz-success-mark svg").css("background", "green");
	    });
        }
    });

    Dropzone.prototype.filesize = function (size) {
       filesizecalculation(size)
    };

    function filesizecalculation(size) {
        if (size < 1024 * 1024) {
            return "<strong>" + (Math.round(Math.round(size / 1024) * 10) / 10) + " KB</strong>";
        } else if (size < 1024 * 1024 * 1024) {
            return "<strong>" + (Math.round((size / 1024 / 1024) * 10) / 10) + " MB</strong>";
        } else if (size < 1024 * 1024 * 1024 * 1024) {
            return "<strong>" + (Math.round((size / 1024 / 1024 / 1024) * 10) / 10) + " GB</strong>";
        }
    }
</script>
{% endblock %}
